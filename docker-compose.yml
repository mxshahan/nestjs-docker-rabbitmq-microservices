services:
  orders:
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development
    command: npm run start:dev orders
    env_file:
      - ./apps/orders/.env
    depends_on:
      - mongodb-primary
      - billing
      - rabbitmq
      - auth
    volumes:
      - .:/usr/src/app
      - erp_node_modules:/usr/src/app/node_modules
    ports:
      - '3000:3000'

  billing:
    build:
      context: .
      dockerfile: ./apps/billing/Dockerfile
      target: development
    command: npm run start:dev billing
    env_file:
      - ./apps/billing/.env
    depends_on:
      - mongodb-primary
      - rabbitmq
      - auth
    volumes:
      - .:/usr/src/app
      - erp_node_modules:/usr/src/app/node_modules

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    ports:
      - '3001:3001'
    env_file:
      - ./apps/auth/.env
    depends_on:
      - mongodb-primary
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - erp_node_modules:/usr/src/app/node_modules

  rabbitmq:
    image: rabbitmq
    restart: always
    ports:
      - '5672:5672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_log:/var/log/rabbitmq

  mongodb-primary:
    image: mongo
    restart: always
    volumes:
      - 'mongodb_master_data:/data/mongodb'
    ports:
      - '27017:27017'

volumes:
  mongodb_master_data:
    driver: local
  rabbitmq_data:
  rabbitmq_log:
  erp_node_modules:
